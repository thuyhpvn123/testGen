{
	"compiler": {
		"version": "0.8.19+commit.7dd6d404"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "payable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "previousAdminRole",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "newAdminRole",
						"type": "bytes32"
					}
				],
				"name": "RoleAdminChanged",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "sender",
						"type": "address"
					}
				],
				"name": "RoleGranted",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "sender",
						"type": "address"
					}
				],
				"name": "RoleRevoked",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "DEFAULT_ADMIN_ROLE",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "PC_CON",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "codeStr",
						"type": "string"
					},
					{
						"internalType": "address",
						"name": "activator",
						"type": "address"
					}
				],
				"name": "activateCode",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "owner",
								"type": "address"
							},
							{
								"internalType": "bytes32",
								"name": "codeHash",
								"type": "bytes32"
							},
							{
								"internalType": "uint256",
								"name": "activeTime",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "expirationActiveTime",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "boostSpeed",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "boostTime",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "rateBoost",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "delegate",
								"type": "address"
							},
							{
								"internalType": "enum Status",
								"name": "status",
								"type": "uint8"
							},
							{
								"internalType": "string",
								"name": "origin",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "mintedAmount",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "releasePercentage",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "lockTime",
								"type": "uint256"
							},
							{
								"internalType": "bytes32",
								"name": "keyHash",
								"type": "bytes32"
							},
							{
								"internalType": "string",
								"name": "haah",
								"type": "string"
							},
							{
								"internalType": "string[]",
								"name": "hihi",
								"type": "string[]"
							}
						],
						"internalType": "struct Code",
						"name": "code",
						"type": "tuple"
					}
				],
				"name": "addCode",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "caller",
						"type": "address"
					},
					{
						"internalType": "bytes32[]",
						"name": "codeHashes",
						"type": "bytes32[]"
					}
				],
				"name": "blockCode",
				"outputs": [
					{
						"internalType": "bool[]",
						"name": "",
						"type": "bool[]"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "codeHash",
						"type": "bytes32"
					}
				],
				"name": "burnCode",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "codeHash",
						"type": "bytes32"
					}
				],
				"name": "getCodeInfo",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "owner",
								"type": "address"
							},
							{
								"internalType": "bytes32",
								"name": "codeHash",
								"type": "bytes32"
							},
							{
								"internalType": "uint256",
								"name": "activeTime",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "expirationActiveTime",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "boostSpeed",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "boostTime",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "rateBoost",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "delegate",
								"type": "address"
							},
							{
								"internalType": "enum Status",
								"name": "status",
								"type": "uint8"
							},
							{
								"internalType": "string",
								"name": "origin",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "mintedAmount",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "releasePercentage",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "lockTime",
								"type": "uint256"
							},
							{
								"internalType": "bytes32",
								"name": "keyHash",
								"type": "bytes32"
							},
							{
								"internalType": "string",
								"name": "haah",
								"type": "string"
							},
							{
								"internalType": "string[]",
								"name": "hihi",
								"type": "string[]"
							}
						],
						"internalType": "struct Code",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "caller",
						"type": "address"
					}
				],
				"name": "getCodeList",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "owner",
								"type": "address"
							},
							{
								"internalType": "bytes32",
								"name": "codeHash",
								"type": "bytes32"
							},
							{
								"internalType": "uint256",
								"name": "activeTime",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "expirationActiveTime",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "boostSpeed",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "boostTime",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "rateBoost",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "delegate",
								"type": "address"
							},
							{
								"internalType": "enum Status",
								"name": "status",
								"type": "uint8"
							},
							{
								"internalType": "string",
								"name": "origin",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "mintedAmount",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "releasePercentage",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "lockTime",
								"type": "uint256"
							},
							{
								"internalType": "bytes32",
								"name": "keyHash",
								"type": "bytes32"
							},
							{
								"internalType": "string",
								"name": "haah",
								"type": "string"
							},
							{
								"internalType": "string[]",
								"name": "hihi",
								"type": "string[]"
							}
						],
						"internalType": "struct Code[]",
						"name": "codes",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					}
				],
				"name": "getRoleAdmin",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "grantRole",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "hasRole",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "renounceRole",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "revokeRole",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "caller",
						"type": "address"
					},
					{
						"internalType": "bytes32",
						"name": "codeHash",
						"type": "bytes32"
					},
					{
						"internalType": "uint256",
						"name": "newLockTime",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "lockRate",
						"type": "uint256"
					}
				],
				"name": "setCodeLockTime",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes4",
						"name": "interfaceId",
						"type": "bytes4"
					}
				],
				"name": "supportsInterface",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "caller",
						"type": "address"
					},
					{
						"internalType": "bytes32[]",
						"name": "codeHashes",
						"type": "bytes32[]"
					}
				],
				"name": "unblockCode",
				"outputs": [
					{
						"internalType": "bool[]",
						"name": "",
						"type": "bool[]"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "caller",
						"type": "address"
					},
					{
						"internalType": "bytes32",
						"name": "codeHash",
						"type": "bytes32"
					},
					{
						"internalType": "string",
						"name": "rawKey",
						"type": "string"
					}
				],
				"name": "unlockCodeWalletKey",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "owner",
								"type": "address"
							},
							{
								"internalType": "bytes32",
								"name": "codeHash",
								"type": "bytes32"
							},
							{
								"internalType": "uint256",
								"name": "activeTime",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "expirationActiveTime",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "boostSpeed",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "boostTime",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "rateBoost",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "delegate",
								"type": "address"
							},
							{
								"internalType": "enum Status",
								"name": "status",
								"type": "uint8"
							},
							{
								"internalType": "string",
								"name": "origin",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "mintedAmount",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "releasePercentage",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "lockTime",
								"type": "uint256"
							},
							{
								"internalType": "bytes32",
								"name": "keyHash",
								"type": "bytes32"
							},
							{
								"internalType": "string",
								"name": "haah",
								"type": "string"
							},
							{
								"internalType": "string[]",
								"name": "hihi",
								"type": "string[]"
							}
						],
						"internalType": "struct Code",
						"name": "updatedCode",
						"type": "tuple"
					}
				],
				"name": "updateCode",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "caller",
						"type": "address"
					},
					{
						"internalType": "bytes32",
						"name": "codeHash",
						"type": "bytes32"
					},
					{
						"internalType": "string",
						"name": "rawKey",
						"type": "string"
					},
					{
						"internalType": "bytes32",
						"name": "newKeyHash",
						"type": "bytes32"
					}
				],
				"name": "updateCodeWalletKey",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "codeHash",
						"type": "bytes32"
					}
				],
				"name": "updateExpiredCode",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"events": {
				"RoleAdminChanged(bytes32,bytes32,bytes32)": {
					"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
				},
				"RoleGranted(bytes32,address,address)": {
					"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
				},
				"RoleRevoked(bytes32,address,address)": {
					"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
				}
			},
			"kind": "dev",
			"methods": {
				"getRoleAdmin(bytes32)": {
					"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
				},
				"grantRole(bytes32,address)": {
					"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
				},
				"hasRole(bytes32,address)": {
					"details": "Returns `true` if `account` has been granted `role`."
				},
				"renounceRole(bytes32,address)": {
					"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
				},
				"revokeRole(bytes32,address)": {
					"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
				},
				"supportsInterface(bytes4)": {
					"details": "See {IERC165-supportsInterface}."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"code_pool.sol": "CodePool"
		},
		"evmVersion": "paris",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts@v4.9.0/access/AccessControl.sol": {
			"keccak256": "0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f",
			"license": "MIT",
			"urls": [
				"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb",
				"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc"
			]
		},
		"@openzeppelin/contracts@v4.9.0/access/IAccessControl.sol": {
			"keccak256": "0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57",
			"license": "MIT",
			"urls": [
				"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a",
				"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh"
			]
		},
		"@openzeppelin/contracts@v4.9.0/access/Ownable.sol": {
			"keccak256": "0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218",
			"license": "MIT",
			"urls": [
				"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32",
				"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz"
			]
		},
		"@openzeppelin/contracts@v4.9.0/utils/Context.sol": {
			"keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
			"license": "MIT",
			"urls": [
				"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
				"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
			]
		},
		"@openzeppelin/contracts@v4.9.0/utils/Strings.sol": {
			"keccak256": "0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0",
			"license": "MIT",
			"urls": [
				"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f",
				"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n"
			]
		},
		"@openzeppelin/contracts@v4.9.0/utils/introspection/ERC165.sol": {
			"keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
			"license": "MIT",
			"urls": [
				"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
				"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
			]
		},
		"@openzeppelin/contracts@v4.9.0/utils/introspection/IERC165.sol": {
			"keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
			"license": "MIT",
			"urls": [
				"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
				"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
			]
		},
		"@openzeppelin/contracts@v4.9.0/utils/math/Math.sol": {
			"keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
			"license": "MIT",
			"urls": [
				"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
				"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
			]
		},
		"@openzeppelin/contracts@v4.9.0/utils/math/SignedMath.sol": {
			"keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
			"license": "MIT",
			"urls": [
				"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
				"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
			]
		},
		"code_pool.sol": {
			"keccak256": "0x72e95234aae64bd4a972c4f9d182b15833309f4e6b9f9d259ca0223b061139b7",
			"license": "MIT",
			"urls": [
				"bzz-raw://6583a788a60924f3f90a752b7927854d993de025cbef12afc14f4af0b5f6fcaf",
				"dweb:/ipfs/QmUjRUF6iFr76LDaLt4L1p7JGU8da9dRqnb3Lz9Fd7jfYv"
			]
		},
		"interfaces/ICode.sol": {
			"keccak256": "0xeaf7e0192497837f8d262534b7e45132a21d34ba9f0554f9138b247ceca6df8a",
			"license": "MIT",
			"urls": [
				"bzz-raw://566ca74e467eef130bf63477b04b1eeaed7a76f7c45ccf4679721b119672e7e2",
				"dweb:/ipfs/QmSPkXnWpQWnYEN2dsjb6pCZGLFBYowUCiq2jFNQMKuBDL"
			]
		},
		"interfaces/ICodePool.sol": {
			"keccak256": "0xcd060efee245383703754a290af9d94930f4469ff89386e9bd74b4d01d926da6",
			"license": "MIT",
			"urls": [
				"bzz-raw://7985eb1bcd344ab3b725ed3fcfdda30b42d0f8772db7b7292edf88ce440bede0",
				"dweb:/ipfs/QmecDmS1evuRYbfhWmWtrU6AWwVMiwxviKAc1GuSWPe7xi"
			]
		}
	},
	"version": 1
}